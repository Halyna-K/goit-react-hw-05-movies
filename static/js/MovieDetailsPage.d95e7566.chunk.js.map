{"version":3,"sources":["components/MovieCard/MovieCard.js","components/Casts/Casts.js","components/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js","Services/api.js","components/Title/Title.js","components/Title/Title.module.css","components/Button/Button.js","components/Button/Button.module.css","components/MovieCard/MovieCard.module.css","components/Casts/Casts.module.css","components/Reviews/Reviews.module.css"],"names":["MovieCard","movie","className","s","card","src","poster_path","alt","title","poster","description","Title","text","vote_average","overview","genres","map","genre","name","id","Casts","casts","movieId","useParams","find","cast","list","item","profile_path","img","character","Reviews","reviews","review","author","content","MovieDetailsPage","match","useRouteMatch","history","useHistory","location","useLocation","useState","setMovie","setCasts","setReviews","console","log","useEffect","api","fetchMovieById","then","fetchCast","data","fetchReviews","results","Button","onClick","push","state","from","style","display","justifyContent","to","url","fontSize","fontWeight","activeStyle","color","fallback","Loader","path","API_KEY","axios","defaults","baseURL","fetchObject","a","param","get","result","message","fetchTrends","fetchMovies","query","page","module","exports","type","button"],"mappings":"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","file":"static/js/MovieDetailsPage.d95e7566.chunk.js","sourcesContent":["import s from \"./MovieCard.module.css\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Title/Title\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <>\n      <article className={s.card}>\n        <img\n          src={`${IMG_URL}${movie.poster_path}`}\n          alt={movie.title}\n          title={movie.title}\n          className={s.poster}\n        />\n\n        <div className={s.description}>\n          <Title text={`${movie.title}`} />\n          <p className={s.text}>User score: {`${movie.vote_average}` * 10}%</p>\n          <Title text={\"Overview\"} />\n          <p className={s.text}>{movie.overview}</p>\n          <Title text={\"Genres\"} />\n\n          <ul>\n            {movie.genres.map((genre) => (\n              <li key={genre.id} className={s.text}>\n                {genre.name}\n                <br />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </article>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string })),\n  }),\n};\n","import s from \"./Casts.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../Title/Title\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const Casts = ({ casts }) => {\n  const { movieId } = useParams();\n  casts.find((cast) => cast.id === movieId);\n  return (\n    <>\n      <ul className={s.list}>\n        {casts.map((cast) => (\n          <li key={cast.id} className={s.item}>\n            <img\n              src={`${IMG_URL}${cast.profile_path}`}\n              alt={cast.name}\n              title={cast.title}\n              className={s.img}\n            />\n            <Title text={cast.name} className={s.text} />\n            <p className={s.text}>\n              <span>Character: </span>\n              {cast.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import s from \"./Reviews.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Reviews = ({ reviews }) => {\n  const { movieId } = useParams();\n  reviews.find((review) => review.id === movieId);\n  return (\n    <>\n      <ul className={s.list}>\n        {reviews.map((review) => (\n          <li key={review.id} className={s.item}>\n            <b className={s.text}>{review.author}</b>\n            <p className={s.text}>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useEffect, useState, Suspense } from \"react\";\nimport {\n  NavLink,\n  Route,\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../Services/api\";\nimport LoaderSpinner from \"../../components/Loader/Loader\";\nimport Button from \"../../components/Button/Button\";\nimport Title from \"../../components/Title/Title\";\nimport { MovieCard } from \"../../components/MovieCard/MovieCard\";\nimport { Casts } from \"../../components/Casts/Casts\";\nimport { Reviews } from \"../../components/Reviews/Reviews\";\n// import NotFound from \"../../components/NotFound/NotFound\";\n\nconst MovieDetailsPage = () => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [casts, setCasts] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  console.log(match);\n  console.log(history);\n  console.log(location);\n\n  useEffect(() => {\n    api.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n  // console.log(movie);\n\n  useEffect(() => {\n    api.fetchCast(movieId).then((data) => setCasts(data.cast));\n    api.fetchReviews(movieId).then((data) => setReviews(data.results));\n  }, [movieId]);\n  // console.log(casts);\n  // console.log(reviews);\n\n  const onClickGoBack = () => {\n    history.push(location?.state?.from?.location ?? \"/\");\n    // history.push(location?.state?.from || \"/\");\n  };\n\n  return (\n    <>\n      <Button text=\"Go back\" onClick={onClickGoBack} />\n\n      {movie && <MovieCard movie={movie} />}\n\n      <Title text={\"Additional information\"} />\n\n      {movie && (\n        <nav>\n          <ul style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n            <li key={movie.id}>\n              <NavLink\n                to={\n                  // {\n                  //   pathname: `/movies/${movieId}`,\n                  //   state: {\n                  //     from: { location, label: `back to movies` },\n                  //   },\n                  // }\n                  `${match.url}/cast`\n                }\n                style={{\n                  fontSize: \"calc(8px + 2vmin)\",\n                  fontWeight: \"bold\",\n                }}\n                activeStyle={{ color: \"black\" }}\n              >\n                Casts\n              </NavLink>\n            </li>\n            <li key={movie.id}>\n              <NavLink\n                to={`${match.url}/reviews`}\n                style={{\n                  fontSize: \"calc(8px + 2vmin)\",\n                  fontWeight: \"bold\",\n                }}\n                activeStyle={{ color: \"black\" }}\n              >\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      )}\n      <Suspense fallback={<LoaderSpinner />}>\n        <Route path={`${match.url}/cast`}>\n          {casts && <Casts casts={casts} />}\n        </Route>\n        <Route path={`${match.url}/reviews`}>\n          {reviews && <Reviews reviews={reviews} />}\n          {/* <NotFound text=\"We don't have reviews for this movie\" />; */}\n        </Route>\n      </Suspense>\n    </>\n  );\n};\n\nMovieDetailsPage.propTypes = {\n  match: PropTypes.object,\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\nexport default MovieDetailsPage;\n","import axios from \"axios\";\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n//  'https://api.themoviedb.org/4'\nconst API_KEY = `299fab6334d3a7c294b935fd0abb8d7b`;\n\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common.Authorization = API_KEY;\n\nconst fetchObject = async (url = \"\", param = {}) => {\n  try {\n    const result = await axios.get(url, param);\n    const data = result.data;\n    return data;\n  } catch (err) {\n    return err.message;\n  }\n};\n\n// fetch Trends\nconst fetchTrends = () => {\n  return fetchObject(`trending/movie/day?api_key=${API_KEY}`);\n};\n\n// fetch Movies\nconst fetchMovies = (query, page) => {\n  return fetchObject(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n  );\n};\n\n// fetch fetchMovieById\nconst fetchMovieById = (movieId) => {\n  return fetchObject(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n};\n\n// fetch fetchCast\nconst fetchCast = (movieId) => {\n  return fetchObject(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\n// fetch fetchReviews\nconst fetchReviews = async (movieId) => {\n  return fetchObject(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\nconst api = {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n};\nexport default api;\n","import PropTypes from \"prop-types\";\nimport s from \"./Title.module.css\";\n\nconst Title = ({ text }) => {\n  return (\n    <>\n      <h1 className={s.text}> {text} </h1>\n      {/* {children} */}\n    </>\n  );\n};\n\nTitle.propTypes = {\n  text: PropTypes.string,\n};\nexport default Title;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Title_text__39Uar\"};","import s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick, text }) => {\n  return (\n    <button type=\"button\" className={s.button} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__1Ict0\",\"description\":\"MovieCard_description__27lnI\",\"poster\":\"MovieCard_poster__15izy\",\"text\":\"MovieCard_text__EcvxM\",\"vote\":\"MovieCard_vote__23teH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Casts_list__3zFuR\",\"item\":\"Casts_item__2bpcK\",\"img\":\"Casts_img__1cqLE\",\"text\":\"Casts_text__3s0tm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__22YxI\",\"item\":\"Reviews_item__2VXsE\",\"text\":\"Reviews_text__13TsG\"};"],"sourceRoot":""}