{"version":3,"sources":["Services/api.js","components/Title/Title.js","components/Title/Title.module.css","components/Button/Button.js","components/Button/Button.module.css","components/MovieCard/MovieCard.module.css","components/MovieCard/MovieCard.js","components/Casts/Casts.js","components/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["API_KEY","axios","defaults","baseURL","fetchObject","a","url","param","get","result","data","message","fetchReviews","movieId","fetchTrends","fetchMovies","query","page","fetchMovieById","fetchCast","Title","text","className","s","module","exports","Button","onClick","type","button","MovieCard","movie","card","src","poster_path","alt","title","poster","description","vote_average","overview","genres","map","genre","name","id","Casts","casts","useParams","find","cast","profile_path","character","Reviews","reviews","review","author","content","MovieDetailsPage","match","useRouteMatch","history","useHistory","location","useLocation","useState","setMovie","setCasts","setReviews","console","log","useEffect","api","then","results","push","state","from","to","path"],"mappings":"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","file":"static/js/4.7e951fca.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n//  'https://api.themoviedb.org/4'\nconst API_KEY = `299fab6334d3a7c294b935fd0abb8d7b`;\n\naxios.defaults.baseURL = BASE_URL;\n// axios.defaults.headers.common.Authorization = API_KEY;\n\nconst fetchObject = async (url = \"\", param = {}) => {\n  try {\n    const result = await axios.get(url, param);\n    const data = result.data;\n    return data;\n  } catch (err) {\n    return err.message;\n  }\n};\n\n// fetch Trends\nconst fetchTrends = () => {\n  return fetchObject(`trending/movie/day?api_key=${API_KEY}`);\n};\n\n// fetch Movies\nconst fetchMovies = (query, page) => {\n  return fetchObject(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n  );\n};\n\n// fetch fetchMovieById\nconst fetchMovieById = (movieId) => {\n  return fetchObject(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n};\n\n// fetch fetchCast\nconst fetchCast = (movieId) => {\n  return fetchObject(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\n// fetch fetchReviews\nconst fetchReviews = async (movieId) => {\n  return fetchObject(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport default {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Title.module.css\";\n\nconst Title = ({ text }) => {\n  return (\n    <>\n      <h1 className={s.text}> {text} </h1>\n      {/* {children} */}\n    </>\n  );\n};\n\nTitle.propTypes = {\n  text: PropTypes.string,\n};\nexport default Title;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Title_text__39Uar\"};","import s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick, text }) => {\n  return (\n    <button type=\"button\" className={s.button} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__1Ict0\",\"description\":\"MovieCard_description__27lnI\",\"poster\":\"MovieCard_poster__15izy\",\"text\":\"MovieCard_text__EcvxM\",\"vote\":\"MovieCard_vote__23teH\"};","import s from \"./MovieCard.module.css\";\nimport PropTypes from \"prop-types\";\nimport Title from \"../Title/Title\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <>\n      <article className={s.card}>\n        <img\n          src={`${IMG_URL}${movie.poster_path}`}\n          alt={movie.title}\n          title={movie.title}\n          className={s.poster}\n        />\n\n        <div className={s.description}>\n          <Title text={`${movie.title}`} />\n          <p className={s.text}>User score: {`${movie.vote_average}` * 10}%</p>\n          <Title text={\"Overview\"} />\n          <p className={s.text}>{movie.overview}</p>\n          <Title text={\"Genres\"} />\n\n          <ul>\n            {movie.genres.map((genre) => (\n              <li key={genre.id}>{genre.name},</li>\n            ))}\n          </ul>\n        </div>\n      </article>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string })),\n  }),\n};\n","import s from \"./Casts.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport Title from \"../Title/Title\";\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const Casts = ({ casts }) => {\n  const { movieId } = useParams();\n  const cast = casts.find((cast) => cast.id === movieId);\n  return (\n    <>\n      <ul>\n        {casts.map((cast) => (\n          <li key={movieId}>\n            <img\n              src={`${IMG_URL}${cast.profile_path}`}\n              alt={cast.name}\n              title={cast.title}\n              className={s.poster}\n            />\n            <Title text={cast.name} />\n            <p className={s.name}>{cast.name}</p>\n            <p>\n              <span>Character: </span>\n              {cast.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Reviews = ({ reviews }) => {\n  const { movieId } = useParams();\n  const review = reviews.find((review) => review.id === movieId);\n  return (\n    <>\n      <ul>\n        {reviews.map((review) => (\n          <li key={movieId}>\n            <b>{review.author}</b>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nReviews.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  NavLink,\n  Route,\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../Services/api\";\nimport Button from \"../../components/Button/Button\";\nimport Title from \"../../components/Title/Title\";\nimport { MovieCard } from \"../../components/MovieCard/MovieCard\";\nimport { Casts } from \"../../components/Casts/Casts\";\nimport { Reviews } from \"../../components/Reviews/Reviews\";\nconst MovieDetailsPage = () => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [casts, setCasts] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  console.log(match);\n\n  useEffect(() => {\n    api.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n  console.log(movie);\n\n  useEffect(() => {\n    api.fetchCast(movieId).then((data) => setCasts(data.cast));\n    api.fetchReviews(movieId).then((data) => setReviews(data.results));\n  }, [movieId]);\n  console.log(casts);\n  console.log(reviews);\n\n  const onClickGoBack = () => {\n    history.push(location?.state?.from || \"/\");\n  };\n\n  return (\n    <>\n      <Button text=\"Go back\" onClick={onClickGoBack} />\n\n      {movie && <MovieCard movie={movie} />}\n\n      <hr />\n\n      <Title text={\"Additional information\"} />\n\n      {movie && (\n        <nav>\n          <ul>\n            <li key={movieId}>\n              <NavLink\n                to={\n                  // {\n                  //   pathname: `/movies/${movieId}`,\n                  //   state: {\n                  //     from: { location, label: `back to movies` },\n                  //   },\n                  // }\n                  `${match.url}/cast`\n                }\n              >\n                Casts\n              </NavLink>\n            </li>\n            <li key={movie.id}>\n              <NavLink to={`${match.url}/reviews`}>Reviews</NavLink>\n            </li>\n          </ul>\n        </nav>\n      )}\n\n      <Route path={`${match.url}/cast`}>\n        {movie && <Casts casts={casts} />}\n      </Route>\n      <Route path={`${match.url}/reviews`}>\n        {movie && <Reviews reviews={reviews} />}\n      </Route>\n    </>\n  );\n};\n\nMovieDetailsPage.propTypes = {\n  match: PropTypes.object,\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\nexport default MovieDetailsPage;\n"],"sourceRoot":""}